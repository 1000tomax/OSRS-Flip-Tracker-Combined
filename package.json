{
  "name": "osrs-flip-dashboard",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm:dev:vite\" \"npm:dev:proxy\"",
    "dev:vite": "vite",
    "dev:proxy": "node api/local-proxy.js",
    "build": "vite build",
    "lint": "eslint . --config ./config/eslint.config.js --ext js,jsx,ts,tsx",
    "lint:fix": "eslint . --config ./config/eslint.config.js --ext js,jsx,ts,tsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "preview": "vite preview",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "test": "jest --config ./config/jest.config.js",
    "test:watch": "jest --config ./config/jest.config.js --watch",
    "test:coverage": "jest --config ./config/jest.config.js --coverage",
    "test:inband": "jest --config ./config/jest.config.js --runInBand",
    "test:ci": "jest --config ./config/jest.config.js --ci --coverage --watchAll=false",
    "deps:check": "npx madge --circular --extensions js,jsx,ts,tsx src",
    "build:production": "npm run type-check && npm run test:ci && npm run build",
    "build:analyze": "npm run build && npm run analyze",
    "analyze": "npx serve dist -s & open http://localhost:3000/stats.html",
    "build:data": "node scripts/build-embeddings.cjs && node scripts/build-summary-index.cjs",
    "classify:scan": "node scripts/classify-scan.mjs",
    "process-flips": "node data-processing/run-all.cjs",
    "process:parse": "node data-processing/parser.cjs",
    "process:summaries": "node data-processing/summaryBuilder.cjs",
    "process:items": "node data-processing/itemStats.cjs",
    "process:meta": "node data-processing/metaWriter.cjs",
    "prebuild": "node -e \"if(!process.env.RUN_DATA_BUILD){process.exit(0)}\" && npm run build:data",
    "prepare": "husky",
    "qa": "git fetch origin && git rebase --autostash origin/main || true && RUN_DATA_BUILD=1 npm run build",
    "qa:full": "npm run type-check && npm run lint && npm run build"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.61.0",
    "@vercel/analytics": "^1.5.0",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "html2canvas-pro": "^1.5.11",
    "jszip": "^3.10.1",
    "node-fetch": "^3.3.2",
    "papaparse": "^5.5.3",
    "prop-types": "^15.8.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.3.8",
    "react-router-dom": "^7.7.1",
    "react-window": "^1.8.11",
    "recharts": "2.12.7",
    "sonner": "^2.0.7",
    "sql.js": "^1.13.0"
  },
  "devDependencies": {
    "@babel/core": "^7.28.3",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@eslint/js": "^9.30.1",
    "@jest/globals": "^30.0.5",
    "@tailwindcss/cli": "^4.1.11",
    "@tailwindcss/postcss": "^4.1.11",
    "@tailwindcss/vite": "^4.1.11",
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.3.0",
    "@types/papaparse": "^5.3.16",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "@vitejs/plugin-react": "^4.6.0",
    "autoprefixer": "^10.4.21",
    "babel-jest": "^30.0.5",
    "babel-plugin-transform-vite-meta-env": "^1.0.3",
    "concurrently": "^9.2.1",
    "csv-parse": "^6.1.0",
    "eslint": "^9.30.1",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "lint-staged": "^16.1.5",
    "madge": "^8.0.0",
    "ml-pca": "^4.1.1",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "rollup-plugin-visualizer": "^6.0.3",
    "tailwindcss": "^4.1.11",
    "typescript": "^5.9.2",
    "vite": "^7.0.4",
    "vite-plugin-pwa": "^1.0.2"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,css,md}": [
      "prettier --write"
    ],
    "*.{js,jsx,ts,tsx,json,css,md}": []
  }
}
