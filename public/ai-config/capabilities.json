{
  "sqlEngine": {
    "name": "sql.js",
    "version": "3.45",
    "supports": ["GROUP_BY", "HAVING", "SUBQUERIES", "CTEs", "WINDOW_FUNCTIONS"],
    "forbidden": ["CREATE", "DROP", "ALTER", "INSERT", "UPDATE", "DELETE", "PRAGMA"]
  },
  "schema": {
    "table": "flips",
    "columns": {
      "item": {
        "type": "TEXT",
        "searchable": true,
        "fuzzy": true,
        "description": "OSRS item name"
      },
      "buy_price": {
        "type": "INTEGER",
        "aggregatable": true,
        "description": "Price paid per item in GP"
      },
      "sell_price": {
        "type": "INTEGER",
        "aggregatable": true,
        "description": "Price sold per item in GP"
      },
      "profit": {
        "type": "INTEGER",
        "aggregatable": true,
        "derived": true,
        "calculation": "sell_price - buy_price",
        "description": "Profit per item in GP"
      },
      "roi": {
        "type": "REAL",
        "aggregatable": true,
        "derived": true,
        "calculation": "(sell_price - buy_price) / buy_price * 100",
        "description": "Return on investment percentage"
      },
      "quantity": {
        "type": "INTEGER",
        "aggregatable": true,
        "description": "Number of items bought/sold"
      },
      "flip_duration_minutes": {
        "type": "INTEGER",
        "aggregatable": true,
        "description": "Time held in minutes"
      },
      "date": {
        "type": "TEXT",
        "filterable": true,
        "temporal": true,
        "format": "YYYY-MM-DD",
        "description": "Date of flip completion"
      },
      "account": {
        "type": "TEXT",
        "groupable": true,
        "description": "RuneScape account name"
      },
      "buy_time": {
        "type": "TEXT",
        "temporal": true,
        "description": "Timestamp of purchase"
      },
      "sell_time": {
        "type": "TEXT",
        "temporal": true,
        "description": "Timestamp of sale"
      }
    }
  },
  "metrics": {
    "profit": {
      "calculation": "sell_price - buy_price",
      "aggregations": ["sum", "avg", "min", "max"],
      "display": "GP",
      "description": "Profit per flip"
    },
    "total_profit": {
      "calculation": "SUM(profit)",
      "display": "GP",
      "description": "Total profit across flips"
    },
    "roi": {
      "calculation": "(sell_price - buy_price) / buy_price * 100",
      "aggregations": ["avg"],
      "display": "percentage",
      "description": "Return on investment"
    },
    "weighted_roi": {
      "calculation": "(SUM(profit) / SUM(buy_price * quantity)) * 100",
      "display": "percentage",
      "description": "True weighted ROI for time period"
    },
    "flips": {
      "calculation": "COUNT(*)",
      "display": "number",
      "description": "Number of flips"
    },
    "volume": {
      "calculation": "SUM(buy_price * quantity)",
      "display": "GP",
      "description": "Total money invested"
    },
    "avg_hold_time": {
      "calculation": "AVG(flip_duration_minutes)",
      "display": "minutes",
      "description": "Average time held"
    }
  },
  "timeRanges": {
    "presets": {
      "last_7d": {
        "sql": "date > date('now', '-7 days')",
        "description": "Last 7 days"
      },
      "last_30d": {
        "sql": "date > date('now', '-30 days')",
        "description": "Last 30 days"
      },
      "this_week": {
        "sql": "date > date('now', '-7 days')",
        "description": "This week"
      },
      "this_month": {
        "sql": "strftime('%Y-%m', date) = strftime('%Y-%m', 'now')",
        "description": "This month"
      },
      "last_month": {
        "sql": "strftime('%Y-%m', date) = strftime('%Y-%m', date('now', '-1 month'))",
        "description": "Last month"
      },
      "all_time": {
        "sql": "1=1",
        "description": "All time"
      }
    },
    "dayOfWeek": {
      "sunday": "0",
      "monday": "1",
      "tuesday": "2",
      "wednesday": "3",
      "thursday": "4",
      "friday": "5",
      "saturday": "6"
    }
  },
  "impossible": [
    {
      "patterns": ["real-time", "live", "current prices", "market price", "ge price", "current ge"],
      "reason": "Data shows completed flips only, not live Grand Exchange prices",
      "alternatives": ["Recent flips (last hour)", "Latest completed sales", "Price trends from your flips"]
    },
    {
      "patterns": ["predict", "forecast", "future", "will be", "going to"],
      "reason": "No prediction model available",
      "alternatives": ["Historical trends", "Moving averages", "Past performance analysis"]
    },
    {
      "patterns": ["per second", "tick level", "millisecond", "real time updates"],
      "reason": "Data is minute-resolution only",
      "alternatives": ["Per minute", "Per hour", "Per day"]
    },
    {
      "patterns": ["other players", "global data", "server data", "everyone"],
      "reason": "Only your personal flip data is available",
      "alternatives": ["Your account comparison", "Your historical performance"]
    },
    {
      "patterns": ["buy orders", "sell offers", "active offers", "pending"],
      "reason": "Only completed flips are tracked",
      "alternatives": ["Completed flips", "Successful trades", "Flip history"]
    }
  ],
  "commonIntents": {
    "top_items_by_profit": {
      "patterns": ["best items", "top profitable", "most money", "highest profit"],
      "requiresLimit": true,
      "defaultLimit": 10
    },
    "recent_activity": {
      "patterns": ["recent", "latest", "what have i", "last few"],
      "defaultTimeRange": "last_7d"
    },
    "item_analysis": {
      "patterns": ["performance", "how is", "stats for", "analysis of"],
      "requiresItem": true
    },
    "time_comparison": {
      "patterns": ["vs", "versus", "compare", "weekend vs weekday"],
      "requiresTimeRanges": true
    },
    "account_comparison": {
      "patterns": ["account", "compare accounts", "by account"],
      "groupBy": "account"
    }
  },
  "validationRules": {
    "maxLimit": 1000,
    "maxTimeRangeDays": 365,
    "minConfidenceThreshold": 0.6,
    "requiredFieldsForMetrics": {
      "profit": ["buy_price", "sell_price"],
      "roi": ["buy_price", "sell_price"],
      "volume": ["buy_price", "quantity"]
    }
  }
}
