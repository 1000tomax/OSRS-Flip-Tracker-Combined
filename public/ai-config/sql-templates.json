{
  "templates": {
    "basic_select": {
      "template": "SELECT {columns} FROM flips {where} {groupBy} {orderBy} {limit}",
      "description": "Basic SELECT query with optional clauses"
    },
    "aggregation": {
      "template": "SELECT {dimensions}, {aggregations} FROM flips {where} GROUP BY {dimensions} {having} {orderBy} {limit}",
      "description": "Aggregation query with grouping"
    },
    "time_comparison": {
      "template": "SELECT {timeExpression} as time_period, {aggregations} FROM flips {where} GROUP BY {timeExpression} {orderBy} {limit}",
      "description": "Compare metrics across time periods"
    },
    "top_n": {
      "template": "SELECT {columns} FROM flips {where} {orderBy} LIMIT {limit}",
      "description": "Top N results query"
    },
    "item_analysis": {
      "template": "SELECT item, {metrics} FROM flips WHERE {itemFilter} {additionalWhere} GROUP BY item {orderBy} {limit}",
      "description": "Analyze specific items"
    },
    "profit_summary": {
      "template": "SELECT SUM(profit) as total_profit, COUNT(*) as total_flips, AVG(roi) as avg_roi, SUM(buy_price * quantity) as total_invested FROM flips {where}",
      "description": "Overall profit summary"
    },
    "account_comparison": {
      "template": "SELECT account, {aggregations} FROM flips {where} GROUP BY account {orderBy}",
      "description": "Compare performance by account"
    },
    "duration_analysis": {
      "template": "SELECT {columns}, flip_duration_minutes FROM flips WHERE flip_duration_minutes {durationFilter} {additionalWhere} {orderBy} {limit}",
      "description": "Analyze flips by duration"
    }
  },
  "commonColumns": {
    "basic": ["item", "buy_price", "sell_price", "profit", "roi", "quantity", "account", "date"],
    "withDuration": [
      "item",
      "buy_price",
      "sell_price",
      "profit",
      "roi",
      "quantity",
      "account",
      "date",
      "flip_duration_minutes"
    ],
    "summary": ["item", "profit", "roi", "quantity"]
  },
  "commonAggregations": {
    "profit_metrics": ["SUM(profit) as total_profit", "AVG(profit) as avg_profit_per_flip", "COUNT(*) as flip_count"],
    "roi_metrics": ["AVG(roi) as avg_roi", "(SUM(profit) / SUM(buy_price * quantity)) * 100 as weighted_roi"],
    "volume_metrics": [
      "COUNT(*) as flip_count",
      "SUM(quantity) as total_quantity",
      "SUM(buy_price * quantity) as total_invested"
    ],
    "time_metrics": [
      "AVG(flip_duration_minutes) as avg_hold_minutes",
      "MIN(flip_duration_minutes) as min_hold_minutes",
      "MAX(flip_duration_minutes) as max_hold_minutes"
    ]
  },
  "whereClause": {
    "timeRanges": {
      "last_7d": "date > date('now', '-7 days')",
      "last_30d": "date > date('now', '-30 days')",
      "this_week": "date > date('now', '-7 days')",
      "this_month": "strftime('%Y-%m', date) = strftime('%Y-%m', 'now')",
      "last_month": "strftime('%Y-%m', date) = strftime('%Y-%m', date('now', '-1 month'))",
      "all_time": "1=1"
    },
    "profitFilters": {
      "profitable": "profit > 0",
      "losses": "profit < 0",
      "breakeven": "profit = 0",
      "big_profits": "profit > 100000",
      "small_profits": "profit BETWEEN 1 AND 10000"
    },
    "roiFilters": {
      "good_roi": "roi > 10",
      "excellent_roi": "roi > 50",
      "poor_roi": "roi < 5",
      "negative_roi": "roi < 0"
    },
    "durationFilters": {
      "quick_flips": "flip_duration_minutes < 60",
      "medium_flips": "flip_duration_minutes BETWEEN 60 AND 1440",
      "slow_flips": "flip_duration_minutes > 1440",
      "very_slow": "flip_duration_minutes > 4320"
    },
    "dayOfWeek": {
      "monday": "strftime('%w', date) = '1'",
      "tuesday": "strftime('%w', date) = '2'",
      "wednesday": "strftime('%w', date) = '3'",
      "thursday": "strftime('%w', date) = '4'",
      "friday": "strftime('%w', date) = '5'",
      "saturday": "strftime('%w', date) = '6'",
      "sunday": "strftime('%w', date) = '0'",
      "weekends": "strftime('%w', date) IN ('0','6')",
      "weekdays": "strftime('%w', date) IN ('1','2','3','4','5')"
    }
  },
  "orderByClause": {
    "profit_desc": "ORDER BY profit DESC",
    "profit_asc": "ORDER BY profit ASC",
    "roi_desc": "ORDER BY roi DESC",
    "date_desc": "ORDER BY date DESC",
    "date_asc": "ORDER BY date ASC",
    "duration_desc": "ORDER BY flip_duration_minutes DESC",
    "flip_count_desc": "ORDER BY flip_count DESC",
    "total_profit_desc": "ORDER BY total_profit DESC",
    "item_alpha": "ORDER BY item ASC"
  },
  "specialQueries": {
    "weekend_vs_weekday": {
      "sql": "SELECT CASE WHEN strftime('%w', date) IN ('0','6') THEN 'Weekend' ELSE 'Weekday' END as day_type, SUM(profit) as total_profit, COUNT(*) as flip_count, (SUM(profit) / SUM(buy_price * quantity)) * 100 as weighted_roi FROM flips {where} GROUP BY day_type ORDER BY total_profit DESC",
      "description": "Compare weekend vs weekday performance"
    },
    "daily_profit_trend": {
      "sql": "SELECT date, SUM(profit) as daily_profit, COUNT(*) as daily_flips FROM flips {where} GROUP BY date ORDER BY date DESC {limit}",
      "description": "Daily profit trends"
    },
    "hourly_activity": {
      "sql": "SELECT strftime('%H', sell_time) as hour, COUNT(*) as flip_count, SUM(profit) as hourly_profit FROM flips WHERE sell_time IS NOT NULL {additionalWhere} GROUP BY hour ORDER BY hour",
      "description": "Activity by hour of day"
    },
    "best_day_per_week": {
      "sql": "WITH daily_totals AS (SELECT date, strftime('%w', date) as dow, SUM(profit) as daily_profit FROM flips GROUP BY date), ranked_days AS (SELECT dow, date, daily_profit, ROW_NUMBER() OVER (PARTITION BY dow ORDER BY daily_profit DESC) as rn FROM daily_totals) SELECT CASE dow WHEN '0' THEN 'Sunday' WHEN '1' THEN 'Monday' WHEN '2' THEN 'Tuesday' WHEN '3' THEN 'Wednesday' WHEN '4' THEN 'Thursday' WHEN '5' THEN 'Friday' WHEN '6' THEN 'Saturday' END as day_name, date as best_date, daily_profit as best_profit FROM ranked_days WHERE rn = 1 ORDER BY dow",
      "description": "Best performing day for each day of the week"
    },
    "item_frequency": {
      "sql": "SELECT item, COUNT(*) as flip_frequency, SUM(profit) as total_profit, AVG(profit) as avg_profit_per_flip FROM flips {where} GROUP BY item HAVING COUNT(*) >= 2 ORDER BY flip_frequency DESC {limit}",
      "description": "Most frequently flipped items"
    },
    "profit_distribution": {
      "sql": "SELECT CASE WHEN profit < 0 THEN 'Loss' WHEN profit = 0 THEN 'Breakeven' WHEN profit < 10000 THEN 'Small Profit' WHEN profit < 100000 THEN 'Medium Profit' ELSE 'Large Profit' END as profit_category, COUNT(*) as flip_count, SUM(profit) as category_profit FROM flips {where} GROUP BY profit_category ORDER BY category_profit DESC",
      "description": "Distribution of flips by profit category"
    }
  },
  "itemFilters": {
    "fuzzyItemMatch": "({patterns})",
    "exactMatch": "item = '{item}'",
    "containsMatch": "item LIKE '%{item}%'",
    "categoryMatch": {
      "weapons": "item LIKE '%sword%' OR item LIKE '%scimitar%' OR item LIKE '%dagger%' OR item LIKE '%whip%'",
      "armor": "item LIKE '%plate%' OR item LIKE '%helm%' OR item LIKE '%legs%' OR item LIKE '%tassets%'",
      "jewelry": "item LIKE '%ring%' OR item LIKE '%amulet%' OR item LIKE '%necklace%'",
      "consumables": "item LIKE '%potion%' OR item LIKE '%food%' OR item LIKE '%rune%'"
    }
  }
}
